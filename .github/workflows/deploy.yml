name: CI/CD Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout infra repo (CloudFormation)
      - name: Checkout Infra Repo
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} 

      # Deploy CloudFormation Stack
      - name: Deploy CloudFormation Stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1.3.0
        with:
          name: AmsaStack
          template: ./cloudformation/amsa-stack.yaml
          capabilities: CAPABILITY_NAMED_IAM
          parameter-overrides: KeyName=${{ secrets.EC2_KEY_NAME }}

      # Get EC2 Public IP
      - name: Get EC2 Public IP
        id: ec2_ip
        run: |
          IP=$(aws cloudformation describe-stacks \
            --stack-name AmsaStack \
            --query "Stacks[0].Outputs[?OutputKey=='PublicIP'].OutputValue" \
            --output text \
            --region ${{ secrets.AWS_REGION }})
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      # Wait for EC2 initialization
      - name: Wait for EC2 Initialization
        run: sleep 60

      # Checkout frontend & backend repos
      - name: Checkout Frontend
        uses: actions/checkout@v3
        with:
          repository: 'Ajinkya-0599/frontend-amsa-ajinkya'
          path: frontend

      - name: Checkout Backend
        uses: actions/checkout@v3
        with:
          repository: 'Ajinkya-0599/backend-amsa-ajinkya'
          path: backend

      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Build frontend
      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build
          npm run export || true

      # Build backend
      - name: Build Backend
        working-directory: backend
        run: npm install

      # Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            if [ ! -d "/home/ubuntu/frontend-amsa-ajinkya" ]; then
              git clone https://github.com/Ajinkya-0599/frontend-amsa-ajinkya.git /home/ubuntu/frontend-amsa-ajinkya
            fi
            if [ ! -d "/home/ubuntu/backend-amsa-ajinkya" ]; then
              git clone https://github.com/Ajinkya-0599/backend-amsa-ajinkya.git /home/ubuntu/backend-amsa-ajinkya
            fi

            cd /home/ubuntu/frontend-amsa-ajinkya && git pull origin main
            cd /home/ubuntu/backend-amsa-ajinkya && git pull origin main

            # Frontend setup
            cd /home/ubuntu/frontend-amsa-ajinkya
            npm install
            npm run build
            npm run export || true
            sudo rm -rf /var/www/frontend-amsa-ajinkya
            sudo mkdir -p /var/www/frontend-amsa-ajinkya
            sudo cp -r out/* /var/www/frontend-amsa-ajinkya/ 

            # Backend setup
            cd /home/ubuntu/backend-amsa-ajinkya
            npm install
            pm2 restart amsa-backend || pm2 start server.js --name amsa-backend --watch

            sudo systemctl reload nginx
            pm2 save
